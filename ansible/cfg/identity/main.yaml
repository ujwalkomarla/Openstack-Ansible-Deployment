---
- name: Identity Service Configuration
  hosts: controller
  sudo: true
  gather_facts: true
  vars_files:
    - vars/main.yaml
  vars_prompt:
    - name: "MYSQL_ROOTPASS"
      prompt: "Enter MySQL root password"
      private: yes
      default: "toor"
  remote_user: vagrant
  tasks:
    - name: Install keystone
      apt:
        pkg: "{{ item }}"
        state: latest
        update-cache: yes
        cache_valid_time: 600
        force: yes
      with_items:
        - keystone
      register: keystoneInstall

    - lineinfile:
        insertafter: "^\\[database\\]"
        dest: /etc/keystone/keystone.conf
        regexp: "^connection"
        line: "connection = mysql://keystone:{{ KEYSTONE_DBPASS }}@controller/keystone"
   
    - file: path=/var/lib/keystone/keystone.db state=absent

    - mysql_db: 
        name: keystone
        state: present
        login_user: root
        login_password: "{{MYSQL_ROOTPASS}}"

    - mysql_user: 
        name: keystone
        host: "{{ item }}"
        password: "{{ KEYSTONE_DBPASS }}"
        state: present
        login_user: root
        login_password: "{{ MYSQL_ROOTPASS }}" #Default 'login_host'=localhost
        priv: keystone.*:ALL
      with_items:
        - localhost
        - '%'

    - name: Create DB tables for identity service
      command: 'su -s /bin/sh -c "keystone-manage db_sync" keystone'
      when: keystoneInstall|changed

    - lineinfile:
        insertafter: "^\\[DEFAULT\\]"
        dest: /etc/keystone/keystone.conf
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: '^admin_token',line: 'admin_token ={{ ADMIN_TOKEN }}'}
        - {regexp: '^log_dir',line: 'log_dir = /var/log/keystone'}        
      register: keystoneConf

    - name: Restart Keystone service
      service: name=keystone state=restarted enabled=yes
      when: keystoneConf|changed

    - template: src=templates/identity/idServConf.sh.j2 dest=/home/vagrant/idServConf.sh owner=vagrant group=vagrant mode=0755

    - pause: prompt="[CONFIG:EXECUTED ONLY ONCE]\nSSH into controller, run ./idServConf.sh, wait for completion and hit [Enter]."

    - template: src=templates/identity/idServVerify.sh.j2 dest=/home/vagrant/idServVerify.sh owner=vagrant group=vagrant mode=0755

    - pause: prompt="[VERIFICATION]\nSSH into controller, run ./idServVerify.sh, wait for completion and hit [Enter]."

    - template: src=templates/clients/admin-openrc.sh.j2 dest=/home/vagrant/admin-openrc.sh owner=vagrant group=vagrant mode=0755

