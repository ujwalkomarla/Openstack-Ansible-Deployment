---
- name: Identity Service Configuration
  hosts: controller
  sudo: true
  gather_facts: true
  vars_files:
    - vars/main.yaml
  vars_prompt:
    - name: "MYSQL_ROOTPASS"
      prompt: "Enter MySQL root password"
      private: yes
      default: "toor"
  remote_user: vagrant
  tasks:
    - name: Install keystone
      apt:
        pkg: "{{ item }}"
        state: latest
        update-cache: yes
        cache_valid_time: 600
        force: yes
      with_items:
        - keystone
      register: keystoneInstall

    - name: Configure keystone
      blockinfile:
        insertafter: "\\[database\\]"
        dest: /etc/keystone/keystone.conf
        block: |
            # The SQLAlchemy connection string used to connect to the database
            connection = mysql://keystone:{{ KEYSTONE_DBPASS }}@controller/keystone
   
    - file: path=/var/lib/keystone/keystone.db state=absent
    - mysql_db: 
        name: keystone
        state: present
        login_user: root
        login_password: "{{MYSQL_ROOTPASS}}"
    - mysql_user: 
        name: keystone #Default 'host' = localhost
        password: "{{ KEYSTONE_DBPASS }} "
        state: present
        login_user: root
        login_password: "{{ MYSQL_ROOTPASS }}" #Default 'login_host'=localhost
        priv: keystone.*:ALL

    - name: Create DB tables for identity service
      command: 'su -s /bin/sh -c "keystone-manage db_sync" keystone'
      when: keystoneInstall|changed

    - name: Configure keystone auth and log dir
      blockinfile:
        insertafter: "\\[DEFAULT\\]"
        dest: /etc/keystone/keystone.conf
        block: |
            # A "shared secret" between keystone and other openstack services
            admin_token = "{{ ADMIN_TOKEN }}"
            log_dir = /var/log/keystone
      register: keystoneConf

    - name: Restart Keystone service
      service: name=keystone state=restarted enabled=yes
      when: keystoneConf|changed

