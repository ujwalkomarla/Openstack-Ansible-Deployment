---
- name: Compute Service Configuration on Controller
  hosts: controller
  sudo: true
  gather_facts: true
  vars_files:
    - vars/main.yaml
  vars_prompt:
    - name: "MYSQL_ROOTPASS"
      prompt: "Enter MySQL root password"
      private: yes
      default: "toor"
  remote_user: vagrant
  tasks:
    - name: Install compute service
      apt:
        pkg: "{{ item }}"
        state: latest
        update-cache: yes
        cache_valid_time: 600
        force: yes
      with_items:
        - nova-api
        - nova-cert
        - nova-conductor
        - nova-consoleauth
        - nova-novncproxy
        - nova-scheduler
        - python-novaclient
      register: novaInstall

    - lineinfile:
        dest: /etc/nova/nova.conf
        insertafter: "^\\[DEFAULT\\]"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: '^auth_strategy',line: 'auth_strategy=keystone'}
        - {regexp: '^rpc_backend',line: 'rpc_backend=rabbit'}
        - {regexp: '^rabbit_host',line: 'rabbit_host=controller'}
        - {regexp: '^rabbit_userid',line: 'rabbit_userid={{RABBIT_USER}}'}
        - {regexp: '^rabbit_password',line: 'rabbit_password={{RABBIT_PASS}}'}
        - {regexp: '^my_ip',line: 'my_ip={{ansible_eth1.ipv4.address}}'}
        - {regexp: '^vncserver_listen',line: 'vncserver_listen={{ansible_eth1.ipv4.address}}'}
        - {regexp: '^vncserver_proxyclient_address',line: 'vncserver_proxyclient_address={{ansible_eth1.ipv4.address}}'}
    - lineinfile: dest=/etc/nova/nova.conf line="#ANSIBLE MODIFIED.BE CAREFUL WHEN EDITING"
    - lineinfile: dest=/etc/nova/nova.conf line="[database]" #CAREFUL:REFERENCE
    - lineinfile:
        dest: /etc/nova/nova.conf
        insertafter: "^\\[database\\]"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: '^connection',line: 'connection=mysql://nova:{{NOVA_DBPASS}}@controller/nova'}

    - lineinfile: dest=/etc/nova/nova.conf line="[keystone_authtoken]"
    - lineinfile:
        dest: /etc/nova/nova.conf
        insertafter: "^\\[keystone_authtoken\\]"
        regexp: "{{item.regexp}}"
        line: "{{item.line}}"
      with_items:
        - {regexp: '^auth_uri',line: 'auth_uri=http://controller:5000'}
        - {regexp: '^auth_host',line: 'auth_host=controller'}
        - {regexp: '^auth_port',line: 'auth_port=35357'}
        - {regexp: '^auth_protocol',line: 'auth_protocol=http'}
        - {regexp: '^admin_tenant_name',line: 'admin_tenant_name=service'}
        - {regexp: '^admin_user',line: 'admin_user=nova'}
        - {regexp: '^admin_password',line: 'admin_password={{NOVA_PASS}}'}

    - file: path=/var/lib/nova/nova.sqlite state=absent
    - mysql_db:
        name: nova
        state: present
        login_user: root
        login_password: "{{MYSQL_ROOTPASS}}"
    - mysql_user:
        name: nova #Default 'host' = localhost
        host: "{{ item }}"
        password: "{{ NOVA_DBPASS }}"
        state: present
        login_user: root
        login_password: "{{ MYSQL_ROOTPASS }}" #Default 'login_host'=localhost
        priv: nova.*:ALL
      with_items:
        - localhost
        - '%'

    - name: Restart Nova service
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - nova-api
        - nova-cert
        - nova-consoleauth
        - nova-scheduler
        - nova-conductor
        - nova-novncproxy

    - name: Create DB tables for compute service
      command: 'su -s /bin/sh -c "nova-manage db sync" nova'
      when: novaInstall|changed

    - template: src=templates/compute/computeServConf.sh.j2 dest=/home/vagrant/computeServConf.sh owner=vagrant group=vagrant mode=0755

    - pause: prompt="[CONFIG:EXECUTED ONLY ONCE]\nSSH into controller, run ./computeServConf.sh, wait for completion and hit [Enter]."

    - name: Restart Nova service
      service:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      with_items:
        - nova-api
        - nova-cert
        - nova-consoleauth
        - nova-scheduler
        - nova-conductor
        - nova-novncproxy

    - pause: prompt="[VERIFICATION]\nSSH into controller, run 'nova image-list',and hit [Enter]."
